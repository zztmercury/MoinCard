package com.lovemoin.card.app.db;

import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteStatement;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.Property;
import de.greenrobot.dao.internal.DaoConfig;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * DAO for table "IGNORED_AD_INFO".
 */
public class IgnoredAdInfoDao extends AbstractDao<IgnoredAdInfo, String> {

    public static final String TABLENAME = "IGNORED_AD_INFO";

    public IgnoredAdInfoDao(DaoConfig config) {
        super(config);
    }

    ;


    public IgnoredAdInfoDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /**
     * Creates the underlying database table.
     */
    public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
        String constraint = ifNotExists ? "IF NOT EXISTS " : "";
        db.execSQL("CREATE TABLE " + constraint + "\"IGNORED_AD_INFO\" (" + //
                "\"ACTIVITY_ID\" TEXT PRIMARY KEY NOT NULL );"); // 0: activityId
    }

    /**
     * Drops the underlying database table.
     */
    public static void dropTable(SQLiteDatabase db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"IGNORED_AD_INFO\"";
        db.execSQL(sql);
    }

    /**
     * @inheritdoc
     */
    @Override
    public IgnoredAdInfo readEntity(Cursor cursor, int offset) {
        IgnoredAdInfo entity = new IgnoredAdInfo( //
                cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0) // activityId
        );
        return entity;
    }

    /**
     * @inheritdoc
     */
    @Override
    public String readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0);
    }

    /**
     * @inheritdoc
     */
    @Override
    public void readEntity(Cursor cursor, IgnoredAdInfo entity, int offset) {
        entity.setActivityId(cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0));
    }

    /**
     * @inheritdoc
     */
    @Override
    protected void bindValues(SQLiteStatement stmt, IgnoredAdInfo entity) {
        stmt.clearBindings();

        String activityId = entity.getActivityId();
        if (activityId != null) {
            stmt.bindString(1, activityId);
        }
    }

    /**
     * @inheritdoc
     */
    @Override
    protected String updateKeyAfterInsert(IgnoredAdInfo entity, long rowId) {
        return entity.getActivityId();
    }

    /**
     * @inheritdoc
     */
    @Override
    public String getKey(IgnoredAdInfo entity) {
        if (entity != null) {
            return entity.getActivityId();
        } else {
            return null;
        }
    }

    /**
     * @inheritdoc
     */
    @Override
    protected boolean isEntityUpdateable() {
        return true;
    }

    /**
     * Properties of entity IgnoredAdInfo.<br/>
     * Can be used for QueryBuilder and for referencing column names.
     */
    public static class Properties {
        public final static Property ActivityId = new Property(0, String.class, "activityId", true, "ACTIVITY_ID");
    }

}
